{"version":3,"sources":["audio/audio.mp3","components/Home.js","private/Config.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["socket","io","connect","Home","_user","_audio","Audio","audio","_name","user","displayName","_dp","photoURL","formatAMPM","date","hours","getHours","minutes","getMinutes","ampm","appendJoin","message","chatBox","document","getElementById","messageElement","createElement","className","innerHTML","Date","append","useState","mute","setMute","scrollDown","childNodes","length","scrollIntoView","behaviour","updateOnline","online","result","forEach","setMessage","sendMessage","data","name","picture","emit","sentMessage","focus","useEffect","on","Object","keys","typers","i","addEventListener","dp","play","recieveMessage","id","onClick","d","style","display","SignOut","onSubmit","e","preventDefault","type","autoComplete","onKeyUp","onChange","onTyping","target","value","placeholder","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","Config","auth","Session","Login","useAuthState","error","provider","GoogleAuthProvider","signInWithPopup","currentUser","signOut","App","vh","window","innerHeight","documentElement","setProperty","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.82708d41.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/audio.af4a25f6.mp3\";","import React, { useEffect, useState } from 'react'\r\nimport Session from './Login'\r\nimport io from 'socket.io-client'\r\nimport audio from \"../audio/audio.mp3\"\r\n\r\n\r\n\r\nconst socket = io.connect('https://chat-app-serverside.herokuapp.com/', {\r\n    'sync disconnect on unload': true\r\n})\r\nfunction Home(_user) {\r\n    // window.addEventListener(\"beforeunload\", function (e) {\r\n    //     (e || window.event).returnValue = null;\r\n    //     console.log(\"bul\")\r\n    //     return null;\r\n    //   });\r\n    let _audio = new Audio(audio);\r\n    let _name = _user.user.displayName;\r\n    let _dp = _user.user.photoURL;\r\n    function formatAMPM(date) {\r\n        var hours = date.getHours();\r\n        var minutes = date.getMinutes();\r\n        var ampm = hours >= 12 ? 'pm' : 'am';\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n        minutes = minutes < 10 ? '0' + minutes : minutes;\r\n        var strTime = hours + ':' + minutes + ' ' + ampm;\r\n        return strTime;\r\n    }\r\n    const appendJoin = (message) => {\r\n        let chatBox = document.getElementById('chat-box');\r\n        const messageElement = document.createElement('div');\r\n        messageElement.className = 'sender-bubble-wrapper';\r\n        messageElement.innerHTML = `<div class=\"sender message-bubble\"><div style=\"font-style:italic;\" class=\"bubble-text\">` + message + `</div><div class=\"bubble-time\">` + formatAMPM(new Date()) + `</div></div></div>`\r\n        chatBox.append(messageElement)\r\n    }\r\n    const sentMessage = (message) => {\r\n        let chatBox = document.getElementById('chat-box');\r\n        const messageElement = document.createElement('div');\r\n        messageElement.className = 'sender-bubble-wrapper';\r\n        messageElement.innerHTML = `<div class=\"sender message-bubble\"><div class=\"bubble-name\">You</div><div class=\"bubble-text\">` + message + `</div><div class=\"bubble-time\">` + formatAMPM(new Date()) + `</div></div><img class=\"dp\" src=` + _dp + ` alt=\"dp\">`\r\n        chatBox.append(messageElement)\r\n        scrollDown();\r\n    }\r\n    const [mute, setMute] = useState(false);\r\n\r\n    const recieveMessage = (name, message, dp) => {\r\n        _audio.play();\r\n        let chatBox = document.getElementById('chat-box');\r\n        const messageElement = document.createElement('div');\r\n        messageElement.className = 'reciever-bubble-wrapper';\r\n        messageElement.innerHTML = `<img class=\"dp\" src=` + dp + ` alt=\"dp\"><div class=\"message-bubble\">\r\n        <div class=\"bubble-name\">`+ name + `</div>\r\n        <div class=\"bubble-text\">`+ message + `</div>\r\n        <div class=\"bubble-time\">`+ formatAMPM(new Date())\r\n            + `</div>\r\n        </div>`\r\n        chatBox.append(messageElement)\r\n        scrollDown();\r\n\r\n    }\r\n    const scrollDown = () => {\r\n        document.getElementById('chat-box').childNodes[document.getElementById('chat-box').childNodes.length - 1].scrollIntoView({ behaviour: 'smooth' })\r\n        // if (document.getElementById('chat-box').scrollTop / document.getElementById('chat-box').scrollHeight <= 0.70)\r\n        //     document.getElementById('scrollDown').style.display = 'none';\r\n        // else\r\n        //     document.getElementById('scrollDown').style.display = 'block'\r\n    }\r\n    const enterKey = (e) => {\r\n        // if (e.key === \"Enter\")\r\n        //     document.getElementById('message-send-button').click()\r\n    }\r\n    const updateOnline = (online) => {\r\n        document.getElementById('online-users').innerHTML = online.length\r\n        let result = '';\r\n        online.forEach(user => {\r\n            result += '<li>' + user + '</li>';\r\n        })\r\n        document.getElementById('online-users-list').innerHTML = result;\r\n    }\r\n    const [message, setMessage] = useState('');\r\n    const sendMessage = () => {\r\n        if (message !== '') {\r\n            let data = {\r\n                name: _name,\r\n                picture: _dp,\r\n                message: message\r\n            }\r\n            socket.emit('send-message', (data));\r\n            socket.emit('typing', { message: '', name: _name })\r\n            sentMessage(message)\r\n            setMessage(\"\");\r\n            document.getElementById('message').focus();\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        socket.emit('new-user-joined', _name)\r\n        socket.on('user-joined', (data) => {\r\n            appendJoin(data.name + ' Joined the Chat.')\r\n            updateOnline(Object.keys(data.online));\r\n\r\n        })\r\n        socket.on('user-left', (data) => {\r\n            appendJoin(data.name + ' Left the Chat.')\r\n            updateOnline(Object.keys(data.online));\r\n        })\r\n\r\n        socket.on('recieve-typing', (data) => {\r\n            let typers = '';\r\n            for (let i = 0; i < Object.keys(data).length; i += 2) {\r\n                if (Object.keys(data)[i] !== _name)\r\n                    typers += (Object.keys(data)[i])\r\n                if (Object.keys(data).length - 2 !== i && typers !== '')\r\n                    typers += ' + ';\r\n            }\r\n            if (typers !== '')\r\n                typers = (typers + ' Typing...')\r\n            document.getElementById('typing').innerHTML = typers;\r\n        });\r\n        socket.on('update-online', (online) => {\r\n            updateOnline(Object.keys(online));\r\n        })\r\n\r\n        socket.on('recieve-message', (data) => {\r\n            document.getElementById('chat-box').addEventListener('DOMNodeInserted', () => {\r\n                // document.getElementById('scrollDown').style.display = 'block'\r\n            })\r\n            recieveMessage(data.name, data.message, data.picture)\r\n        });\r\n\r\n    }, [])\r\n    const onTyping = (message) => {\r\n        setMessage(message);\r\n        socket.emit('typing', { message: message, name: _name })\r\n    }\r\n    return (\r\n        <div className=\"home-container\">\r\n            <div className=\"main-chat-container\">\r\n                <div className=\"chat-header\">\r\n                    <div className=\"m-10\">\r\n                        <div className=\"header-text\">Realtime Chat Around the World</div>\r\n                        <div id=\"online-wrapper\" onClick={() => { let d = document.getElementById('online-users-list').style.display; (d === '') ? (document.getElementById('online-users-list').style.display = 'block') : (document.getElementById('online-users-list').style.display = '') }}>(<i className=\"fas fa-globe\"></i> Online <span id='online-users'></span>) <ul id=\"online-users-list\"></ul></div>\r\n                    </div>\r\n                    <div className=\"m-10\">\r\n                        <div onClick={() => setMute(!mute)}>{(mute) ? (<i className=\"fas fa-volume-mute\"></i>) : (<i className=\"fas fa-volume-up\"></i>)}</div>\r\n                        <Session.SignOut />\r\n                    </div>\r\n                </div>\r\n                <div id=\"chat-box\" className=\"chat-box\">\r\n\r\n                </div>\r\n                <button onClick={(() => scrollDown())} id=\"scrollDown\"><i className=\"fas fa-arrow-alt-circle-down\"></i></button>\r\n                <div id=\"sending-component\">\r\n                    <div id=\"typing\"></div>\r\n                    <form onSubmit={e => e.preventDefault()} id=\"send-message-wrapper\" className=\"send-message-wrapper\">\r\n                        <input type=\"text\" autoComplete=\"off\" onKeyUp={(e) => enterKey(e)} name=\"message\" id=\"message\" onChange={e => onTyping(e.target.value)} value={message} placeholder=\"Enter Your Message\" />\r\n                        <button id=\"message-send-button\" onClick={() => sendMessage()}>Send</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","const firebaseConfig = {\r\n    apiKey: \"AIzaSyCyB2Or8Dxmwd8m_iptGEFcqN579BN1dzk\",\r\n    authDomain: \"message-app-b2d31.firebaseapp.com\",\r\n    projectId: \"message-app-b2d31\",\r\n    storageBucket: \"message-app-b2d31.appspot.com\",\r\n    messagingSenderId: \"939057848458\",\r\n    appId: \"1:939057848458:web:9efb13d3cf5d74bd9d4d73\",\r\n    measurementId: \"G-B21M3PZ13F\",\r\n};\r\n\r\nexport default firebaseConfig;","import React from \"react\";\r\nimport Home from \"./Home\";\r\nimport Config from \"../private/Config\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/analytics\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n// import { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nfirebase.initializeApp(Config);\r\n\r\nconst auth = firebase.auth();\r\nfunction Login() {\r\n\r\n\r\n    // const firestore = firebase.firestore();\r\n    const [_user] = useAuthState(auth)\r\n    const signInWithGoogle = () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        auth.signInWithPopup(provider);\r\n    }\r\n    let name;\r\n    try {\r\n        if (_user.displayName)\r\n            name = _user\r\n    } catch (error) {\r\n        // console.log(error)\r\n    }\r\n    return (\r\n\r\n        (name) ? (<Home user={name} />) : (<button id=\"login\" onClick={signInWithGoogle}>Login</button>));\r\n};\r\nconst SignOut = () => {\r\n    return auth.currentUser && (<button id=\"signout\" onClick={() => auth.signOut()}>Sign Out</button>)\r\n}\r\nlet Session = { Login, SignOut };\r\nexport default Session;\r\n","import './App.css';\nimport Session from './components/Login';\nfunction App() {\n  //For setting the height of app according to mobile\n  let vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\n  return (\n    <Session.Login />\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}